
services:
  # Backend Service (FastAPI)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: portfolio-backend
    env_file:
      - ./backend/.env.dokploy
    ports:
      - "8000:8888"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend/vectorstores:/app/vectorstores
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - portfolio-network
    depends_on:
      - redis

  # Frontend Service (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: portfolio-frontend
    env_file:
      - ./frontend/.env.dokploy
    ports:
      - "3000:3333"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - portfolio-network

  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: portfolio-redis
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - portfolio-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  redis_data:
    driver: local

networks:
  portfolio-network:
    driver: bridge
